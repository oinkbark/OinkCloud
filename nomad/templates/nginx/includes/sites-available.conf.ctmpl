{{ define "nginx" }}
#upstream Consul_Preview_{{ .name }} {
#  {{ range service (print .name "preview-vue3") }}
#    server {{ .Address }}:{{ .Port }};
#  {{ end }}
#
#    server 169.254.1.1:3030 backup;
#}
upstream Consul_UI_{{ .name }} {
  {{ with service (print .name "-vue3") }}
    {{ range . }}
      server {{ .Address }}:{{ .Port }};
    {{ end }}
  {{ end }}

      server 169.254.1.1:3000 backup;
}

upstream Consul_API_{{ .name }} {
  {{ with service (print .name "-graphql") }}
    {{ range . }}
      server {{ .Address }}:{{ .Port }};
    {{ end }}
  {{ end }}

      server 169.254.1.1:8080 backup;
}

server {
  server_name api.{{ .link }};

  listen *:80;
  listen [::]:80;

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  server_name {{ .link }};

  # IPv6 AND IPv4
  listen *:80;
  listen [::]:80;

  # Non-standard error code 497
  # Used to process plain HTTP request which has been sent to HTTPS port
  error_page 497 https://$host:$server_port$request_uri;

  # Prove site ownership to Certbot
  # Must be done before SSL redirect
  location ^~ /.well-known/acme-challenge/ {
    default_type "text/plain";
    root letsencrypt/acme-challenge/;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}
# trailing slash after upstream will alter path
# otherwise, path carries over
server {
  server_name api.{{ .link }};

  listen *:443    ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate letsencrypt/live/{{ .link }}/fullchain.pem;
  ssl_certificate_key letsencrypt/live/{{ .link }}/privkey.pem;

  location /graphql {
    proxy_pass http://Consul_API_{{ .name }};
  }

  location /endpoint {
    proxy_pass http://Consul_API_{{ .name }};
  }

  location / {
    proxy_set_header Host api.{{ .link }};
    proxy_pass http://Consul_UI_{{ .name }};
  }
}
server {
  server_name assets.{{ .link }};

  listen *:443    ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate letsencrypt/live/{{ .link }}/fullchain.pem;
  ssl_certificate_key letsencrypt/live/{{ .link }}/privkey.pem;

  location / {
    return 301 https://storage.googleapis.com/{{ .link }}$request_uri;
  }
}

server {
  server_name {{ .link }};

  listen *:443    ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate letsencrypt/live/{{ .link }}/fullchain.pem;
  ssl_certificate_key letsencrypt/live/{{ .link }}/privkey.pem;

  location ~ .php$ {
    deny all;
  }
  location /cgi-bin {
    deny all;
  }
  location ~ /\.(?!well-known) {
    deny all;
  }

  location / {
    proxy_set_header Host {{ .link }};
    proxy_pass http://Consul_UI_{{ .name }};
  }
}

#server {
#  server_name preview.{{ .link }};
#
#  listen *:443    ssl http2;
#  listen [::]:443 ssl http2;
#
#  ssl_certificate letsencrypt/live/{{ .link }}/fullchain.pem;
#  ssl_certificate_key letsencrypt/live/{{ .link }}/privkey.pem;
#
#  location / {
#    proxy_set_header Host preview.{{ .link }};
#    proxy_pass http://Consul_Preview_{{ .name }};
#  }
#}
{{ end }}

{{ with secret "secret/oinkserver/domains" }}
{{ $domains := .Data.data.nginx }}
{{ range $domains }}
{{ executeTemplate "nginx" . }}
{{ end }}
{{ end }}
